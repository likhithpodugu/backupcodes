#include <bits/stdc++.h>
using namespace std;

int prec(char c)
{
	if (c == '^')
		return 3;
	else if (c == '/' || c == '*')
		return 2;
	else if (c == '+' || c == '-')
		return 1;
	else
		return -1;
}

void infixToPrefix(string s)
{

	stack<char> st; 
	string result;

	for (int i = 0; i < s.length(); i++) {
		char c = s[i];
		if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')
			|| (c >= '0' && c <= '9'))
			result += c;
		else if (c == '(')
			st.push('(');
		else if (c == ')') {
			while (st.top() != '(') {
				result += st.top();
				st.pop();
			}
			st.pop();
		}
		else {
			while (!st.empty()	&& prec(s[i]) <= prec(st.top())) {
				result += st.top();
				st.pop();
			}
			st.push(c);
		}
	}
	
	while (!st.empty()) {
		result += st.top();
		st.pop();
	}

	stack <char> rev ;
	for(int i = 0 ;i<result.length() ;i++){
	    rev.push(result[i]) ;
	}
	string ans ;
	for(int i = 0 ;i<result.length();i++){
        ans = ans + rev.top() ;
        rev.pop() ;
    }
    
    cout<<ans<<endl ;
}

int main()
{
	string aa = "(a+b)" ;
    stack <char> box ;
    for(int i = 0 ;i<aa.length() ; i++){
        box.push(aa[i]) ;
    }
    string result ;
    for(int i = 0 ;i<aa.length();i++){
        result = result + box.top() ;
        box.pop() ;
    }
    string cc ;
    for(int i = 0 ; i<result.length();i++){
        if(result[i] == '('){
            cc = cc + ")" ;
        }
        else if(result[i] == ')'){
            cc = cc + "(" ;
        }
        else {
            cc = cc + result[i] ;
        }
    }
	infixToPrefix(cc);
	return 0;
}
